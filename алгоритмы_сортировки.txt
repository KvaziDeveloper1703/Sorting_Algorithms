Пузырьковая сортировка (Bubble Sort)
Простой, но неэффективный алгоритм. Проходит по массиву и меняет соседние элементы, если они стоят в неправильном порядке. Повторяется, пока массив не будет отсортирован.
Сложность: O(n²)

Сортировка выбором (Selection Sort)
Находит минимальный элемент в массиве и перемещает его в начало. Повторяет процесс для оставшейся части массива.
Сложность: O(n²)

Сортировка вставками (Insertion Sort)
Строит отсортированный массив, вставляя элементы из исходного массива на правильное место.
Сложность: O(n²)

Сортировка слиянием (Merge Sort)
Разделяет массив на две половины, сортирует их рекурсивно и сливает в один отсортированный массив.
Сложность: O(n log n)

Быстрая сортировка (Quick Sort)
Выбирает опорный элемент (pivot), делит массив на элементы меньше и больше pivot, затем рекурсивно сортирует эти части.
Сложность: O(n log n) в среднем, O(n²) в худшем случае

Сортировка кучей (Heap Sort)
Использует двоичную кучу для создания отсортированного массива. Постепенно удаляет наибольший элемент из кучи и вставляет его в конец массива.
Сложность: O(n log n)

Сортировка подсчётом (Counting Sort)
Используется для сортировки чисел или других объектов, где элементы представлены в виде числовых ключей. Создаёт массив подсчёта для определения позиции элементов.
Сложность: O(n + k), где k — диапазон ключей

Поразрядная сортировка (Radix Sort)
Сортирует элементы поразрядно, начиная с младших разрядов. Использует стабильный алгоритм сортировки (например, Counting Sort) для каждого разряда.
Сложность: O(nk), где k — количество разрядов

Сортировка Шелла (Shell Sort)
Улучшение сортировки вставками. Использует промежуточные "шаги" (gap) для уменьшения количества перемещений.
Сложность: зависит от выбранной последовательности шагов, обычно около O(n^(3/2))

Блочная сортировка (Bucket Sort)
Делит массив на несколько "блоков" (bucket), сортирует каждый из них и объединяет. Эффективен для равномерно распределённых данных.
Сложность: O(n + k), где k — количество блоков